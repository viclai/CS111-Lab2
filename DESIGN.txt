Design Problem: Change Notification 

What It Does: 
  A process can request a notification of a sector of the disk being written 
    to. The "-n" option does this. 
  This option supports notifications for a sector of the disk specified by 
    the user. For example, the command "./osprdaccess -r 4 -n 2 &" receives a 
    notification when the second sector of the disk has been written to. 
    When it gets the notification, it reads the first four bytes of the disk. 
    The default value is 1 (if the user doesn't specify a part of the disk). 
  The processes requesting for a notification must be run in the background 
    (or else it will hang). 

What's the Point? 
  This application can be related to a scoreboard (at a sporting event)! We 
    read the new score when we get notified that the score has changed. A 
    command like './osprdaccess -r 21 -n & echo "Bruins 46 Trojans 35" | 
    ./osprdaccess -w 21' may be analogous to that example. Each sector of the 
    disk may possibly represent the score for a different game. 
  Our design is able to have a process write to disk after getting a 
    notification, but theoretically speaking, reading after being notified may 
    be more useful. 

Implementation Details: 
  Define a new command (for "ioctl") to handle a notification request. The 
    command takes in an argument that specifies which sector of the disk to be 
    notified about. 
  Use "wait_event_interruptible" to allow other processes to run while the 
    process requesting notification waits. 
